buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.1"
    }
}

version "2.1-SNAPSHOT"
group "au.org.ala"

apply plugin: "org.springframework.boot"
apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin:'maven-publish'

grails {
    plugins {
//        compile project(":collectory-hub")
//        compile project(":sandbox-hub")
    }
}

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-bootstrap"
    compile "org.grails.plugins:cache"
    compile "net.sf.ehcache:ehcache-core:2.4.6"

//    compile "org.grails.plugins:scaffolding"
//    compile "org.grails.plugins:hibernate5"
//    compile "org.hibernate:hibernate-core:5.1.3.Final"
//    compile "org.hibernate:hibernate-ehcache:5.1.3.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.1"
//    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

//    compile "org.grails:grails-datastore-gorm:${gormVersion}"
    compile 'org.grails.plugins:external-config:1.1.1'

    compile "commons-httpclient:commons-httpclient:3.1"
    compile "commons-lang:commons-lang:2.6"
    compile 'org.jsoup:jsoup:1.10.3'
    compile "org.apache.tika:tika-parsers:1.4"
    compile "org.apache.httpcomponents:httpclient:4.3.3"
    compile 'net.sf.opencsv:opencsv:2.3'

    //compile "org.grails.plugins:ala-bootstrap3:3.1-SNAPSHOT"
    //compile 'org.grails.plugins:external-config:1.3.0'

    compile "org.grails.plugins:ala-bootstrap3:3.2.3"
    compile "org.grails.plugins:collectory-hub:2.0.1"
    compile "org.grails.plugins:sandbox-hub:1.0.1"
    compile group: 'org.grails.plugins', name: 'ala-admin-plugin', version: '2.1'
    compile ("org.grails.plugins:ala-ws-security-plugin:2.0")
    compile ("org.grails.plugins:ala-ws-plugin:2.0")
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

assets {
    minifyJs = true
    minifyCss = true
    minifyOptions = [
        languageMode: 'ES6',
        targetLanguage: 'ES5',
        optimizationLevel: 'SIMPLE'
    ]
}

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        mavenJar(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.web
        }
    }
}
